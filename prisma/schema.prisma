generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  MANAGEMENT
  MERCHANDISER
  CAD
  SAMPLE_FABRIC
  SAMPLE_ROOM
}

enum Status {
  ACTIVE
  INACTIVE
  PENDING
  SUSPENDED
}

model User {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  userName    String    @unique
  password    String
  role        Role
  employeeId  String    @unique @db.ObjectId
  employee    Employee? @relation(fields: [employeeId], references: [id], onDelete: Cascade)
  tnas        TNA[]     @relation(name: "TNAtoMerchandiser") // One-to-many relation

  @@map("users")
}

model Employee {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  customId    String   @unique
  name        String
  email       String   @unique
  phoneNumber String?
  status      Status
  designation String
  department  String
  user        User?    @relation

  @@map("employees")
}

enum TNAStatus {
  ACTIVE
  CANCELLED
  INACTIVE
}

enum sampleType {
  DVP
  PP1
  PP2
  PP3
  PP4
  PP5
}

model TNA {
  id                String    @id @default(auto()) @map("_id") @db.ObjectId
  buyer             Buyer?    @relation(fields: [buyerId], references: [id], name: "TNAtoBuyer")
  buyerId           String?   @db.ObjectId // One-to-many, no @unique
  style             String
  itemName          String
  sampleSendingDate DateTime
  orderDate         DateTime
  merchandiser      User?     @relation(fields: [userId], references: [id], name: "TNAtoMerchandiser")
  status            TNAStatus @default(ACTIVE)
  sampleType       sampleType
  userId            String?   @db.ObjectId // No @unique for one-to-many
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt

  @@map("tnas")
}

model AuditLog {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  timestamp   DateTime @default(now())
  user        String
  userRole    String
  action      String
  resource    String
  resourceId  String
  description String
  ipAddress   String
  userAgent   String
  status      String
  @@map("audit_logs")
}

model Buyer {
  id                String      @id @default(auto()) @map("_id") @db.ObjectId
  name              String
  country           String
  buyerDepartments  Department? @relation("Buyer_buyerDepartments", fields: [buyerDepartmentId], references: [id])
  buyerDepartmentId String?     @db.ObjectId
  tnas              TNA[]       @relation(name: "TNAtoBuyer")
  @@map("buyers")
}

model Department {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  name          String  
  contactPerson String
  buyers        Buyer[]  @relation("Buyer_buyerDepartments")
  @@map("departments")
}